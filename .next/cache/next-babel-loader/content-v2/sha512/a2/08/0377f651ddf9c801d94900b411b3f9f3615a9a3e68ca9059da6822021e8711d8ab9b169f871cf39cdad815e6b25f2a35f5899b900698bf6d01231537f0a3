{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nikita/comm-su/src/components/Navbar/Navbar.jsx\";\nimport React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport { ROUTES } from '../../const/routes';\nimport { useRouter } from 'next/dist/client/router';\n\nconst secondaryMenu = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\nconst LocaleToggler = () => {\n  const {\n    push,\n    locales,\n    pathname,\n    locale: currentLocale\n  } = useRouter();\n\n  const switchLocale = ({\n    target\n  }) => {\n    const {\n      value: locale\n    } = target.attributes.locale;\n    return push(pathname, pathname, {\n      locale\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.locales,\n    children: locales.map(locale => /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classNames(styles.link, currentLocale === locale && styles.current),\n      locale: locale,\n      onClick: switchLocale,\n      children: locale.toUpperCase()\n    }, locale, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\nconst Navbar = () => {\n  const {\n    route\n  } = useRouter();\n  const {\n    t\n  } = useTranslation('common');\n  const {\n    mainRoutes,\n    secondaryRoutes\n  } = Object.entries(ROUTE).reduce((acc, [alias, route]) => {}, {});\n  console.log(secondaryRoutes);\n  const navBarRoutes = Object.entries(ROUTES).filter(([_, {\n    navBar\n  }]) => navBar);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [navBarRoutes.map(([alias, properties]) => /*#__PURE__*/_jsxDEV(Link, {\n      href: alias,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: classNames(styles.link, route === alias && styles.current),\n        children: t(`header.${alias}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 10\n      }, this)\n    }, alias, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(LocaleToggler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/home/nikita/comm-su/src/components/Navbar/Navbar.jsx"],"names":["React","useTranslation","styles","classNames","Link","ROUTES","useRouter","secondaryMenu","LocaleToggler","push","locales","pathname","locale","currentLocale","switchLocale","target","value","attributes","map","link","current","toUpperCase","Navbar","route","t","mainRoutes","secondaryRoutes","Object","entries","ROUTE","reduce","acc","alias","console","log","navBarRoutes","filter","_","navBar","root","properties"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;AACA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,MAAM,EAAEC;AAJJ,MAKFP,SAAS,EALb;;AAMA,QAAMQ,YAAY,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAc;AACjC,UAAM;AAACC,MAAAA,KAAK,EAAEJ;AAAR,QAAkBG,MAAM,CAACE,UAAP,CAAkBL,MAA1C;AACA,WAAOH,IAAI,CAACE,QAAD,EAAWA,QAAX,EAAqB;AAACC,MAAAA;AAAD,KAArB,CAAX;AACD,GAHD;;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACQ,OAAvB;AAAA,cACJA,OAAO,CAACQ,GAAR,CAAcN,MAAD,iBACZ;AACE,MAAA,SAAS,EACPT,UAAU,CAACD,MAAM,CAACiB,IAAR,EACLN,aAAa,KAAKD,MAAnB,IAA8BV,MAAM,CAACkB,OAD/B,CAFd;AAKE,MAAA,MAAM,EAAER,MALV;AAOE,MAAA,OAAO,EAAEE,YAPX;AAAA,gBASGF,MAAM,CAACS,WAAP;AATH,OAMOT,MANP;AAAA;AAAA;AAAA;AAAA,YADD;AADI;AAAA;AAAA;AAAA;AAAA,UAAP;AAeD,CA1BD;;AA4BA,MAAMU,MAAM,GAAG,MAAM;AACnB,QAAM;AAACC,IAAAA;AAAD,MAAUjB,SAAS,EAAzB;AACA,QAAM;AAACkB,IAAAA;AAAD,MAAMvB,cAAc,CAAC,QAAD,CAA1B;AACA,QAAM;AAACwB,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAAgCC,MAAM,CAACC,OAAP,CAAeC,KAAf,EACjCC,MADiC,CACzB,CAACC,GAAD,EAAM,CAACC,KAAD,EAAQT,KAAR,CAAN,KAAyB,CAEjC,CAHiC,EAG/B,EAH+B,CAAtC;AAKAU,EAAAA,OAAO,CAACC,GAAR,CAAYR,eAAZ;AACA,QAAMS,YAAY,GAAGR,MAAM,CAACC,OAAP,CAAevB,MAAf,EAChB+B,MADgB,CACT,CAAC,CAACC,CAAD,EAAI;AAACC,IAAAA;AAAD,GAAJ,CAAD,KAAmBA,MADV,CAArB;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAEpC,MAAM,CAACqC,IAAvB;AAAA,eAEHJ,YAAY,CAACjB,GAAb,CAAiB,CAAC,CAACc,KAAD,EAAQQ,UAAR,CAAD,kBACf,QAAC,IAAD;AACE,MAAA,IAAI,EAAER,KADR;AAAA,6BAGC;AACG,QAAA,SAAS,EACP7B,UAAU,CAACD,MAAM,CAACiB,IAAR,EAAeI,KAAK,KAAKS,KAAX,IAAqB9B,MAAM,CAACkB,OAA1C,CAFf;AAAA,kBAIII,CAAC,CAAE,UAASQ,KAAM,EAAjB;AAJL;AAAA;AAAA;AAAA;AAAA;AAHD,OAEOA,KAFP;AAAA;AAAA;AAAA;AAAA,YADF,CAFG,eAeL,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAfK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBD,CA5BD;;AA6BA,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport {ROUTES} from '../../const/routes';\nimport {useRouter} from 'next/dist/client/router';\nconst secondaryMenu = () => {\n  return <div></div>;\n};\n\nconst LocaleToggler = () => {\n  const {\n    push,\n    locales,\n    pathname,\n    locale: currentLocale,\n  } = useRouter();\n  const switchLocale = ({target}) => {\n    const {value: locale} = target.attributes.locale;\n    return push(pathname, pathname, {locale});\n  };\n  return <div className={styles.locales}>\n    {locales.map( (locale) =>\n      <a\n        className={\n          classNames(styles.link,\n              (currentLocale === locale) && styles.current)\n        }\n        locale={locale}\n        key={locale}\n        onClick={switchLocale}\n      >\n        {locale.toUpperCase()}\n      </a>)\n    }\n  </div>;\n};\n\nconst Navbar = () => {\n  const {route} = useRouter();\n  const {t} = useTranslation('common');\n  const {mainRoutes, secondaryRoutes} = Object.entries(ROUTE)\n      .reduce( (acc, [alias, route]) => {\n\n      }, {});\n\n  console.log(secondaryRoutes);\n  const navBarRoutes = Object.entries(ROUTES)\n      .filter(([_, {navBar}]) => navBar);\n  return <div className={styles.root}>\n    {\n      navBarRoutes.map(([alias, properties]) =>\n        <Link\n          href={alias}\n          key={alias}\n        ><a\n            className={\n              classNames(styles.link, (route === alias) && styles.current)\n            }>\n            {t(`header.${alias}`)}\n          </a>\n        </Link>,\n      )\n    }\n    <LocaleToggler/>\n  </div>;\n};\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}