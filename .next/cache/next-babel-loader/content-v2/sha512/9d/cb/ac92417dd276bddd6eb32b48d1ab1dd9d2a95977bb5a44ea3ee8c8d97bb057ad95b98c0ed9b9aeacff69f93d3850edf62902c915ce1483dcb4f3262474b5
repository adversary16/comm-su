{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nikita/comm-su/src/components/Navbar/Navbar.jsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport { ROUTES } from '../../const/routes';\nimport { useRouter } from 'next/dist/client/router';\n\nconst secondaryMenu = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\nconst LocaleToggler = () => {\n  const _useRouter = useRouter(),\n        {\n    push,\n    locales,\n    pathname,\n    locale: currentLocale\n  } = _useRouter,\n        rest = _objectWithoutProperties(_useRouter, [\"push\", \"locales\", \"pathname\", \"locale\"]);\n\n  const switchLocale = ({\n    target\n  }) => {\n    const {\n      value: locale\n    } = target.attributes.locale;\n    return push(pathname, pathname, {\n      locale\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.locales,\n    children: locales.map(locale => /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classNames(styles.link, currentLocale === locale && styles.current),\n      locale: locale,\n      onClick: switchLocale,\n      children: locale.toUpperCase()\n    }, locale, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n\nconst Navbar = () => {\n  const {\n    route\n  } = useRouter();\n  const {\n    t\n  } = useTranslation('common');\n  const navBarRoutes = Object.entries(ROUTES).filter(([_, {\n    navBar\n  }]) => navBar);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [navBarRoutes.map(([alias, properties]) => /*#__PURE__*/_jsxDEV(Link, {\n      href: alias,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: classNames(styles.link, route === alias && styles.current),\n        children: t(`header.${alias}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 10\n      }, this)\n    }, alias, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(LocaleToggler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/home/nikita/comm-su/src/components/Navbar/Navbar.jsx"],"names":["React","useTranslation","styles","classNames","Link","ROUTES","useRouter","secondaryMenu","LocaleToggler","push","locales","pathname","locale","currentLocale","rest","switchLocale","target","value","attributes","map","link","current","toUpperCase","Navbar","route","t","navBarRoutes","Object","entries","filter","_","navBar","root","alias","properties"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;AACA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,MAAMC,aAAa,GAAG,MAAM;AAC1B,qBAAkEF,SAAS,EAA3E;AAAA,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,MAAM,EAAEC;AAAlC,GAAN;AAAA,QAA0DC,IAA1D;;AACA,QAAMC,YAAY,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAc;AACjC,UAAM;AAACC,MAAAA,KAAK,EAAEL;AAAR,QAAkBI,MAAM,CAACE,UAAP,CAAkBN,MAA1C;AACA,WAAOH,IAAI,CAACE,QAAD,EAAWA,QAAX,EAAqB;AAACC,MAAAA;AAAD,KAArB,CAAX;AACD,GAHD;;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAEV,MAAM,CAACQ,OAAvB;AAAA,cACJA,OAAO,CAACS,GAAR,CAAcP,MAAD,iBACZ;AACE,MAAA,SAAS,EACPT,UAAU,CAACD,MAAM,CAACkB,IAAR,EACLP,aAAa,KAAKD,MAAnB,IAA8BV,MAAM,CAACmB,OAD/B,CAFd;AAKE,MAAA,MAAM,EAAET,MALV;AAOE,MAAA,OAAO,EAAEG,YAPX;AAAA,gBASGH,MAAM,CAACU,WAAP;AATH,OAMOV,MANP;AAAA;AAAA;AAAA;AAAA,YADD;AADI;AAAA;AAAA;AAAA;AAAA,UAAP;AAeD,CArBD;;AAuBA,MAAMW,MAAM,GAAG,MAAM;AACnB,QAAM;AAACC,IAAAA;AAAD,MAAUlB,SAAS,EAAzB;AACA,QAAM;AAACmB,IAAAA;AAAD,MAAMxB,cAAc,CAAC,QAAD,CAA1B;AACA,QAAMyB,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAevB,MAAf,EAChBwB,MADgB,CACT,CAAC,CAACC,CAAD,EAAI;AAACC,IAAAA;AAAD,GAAJ,CAAD,KAAmBA,MADV,CAArB;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAE7B,MAAM,CAAC8B,IAAvB;AAAA,eAEHN,YAAY,CAACP,GAAb,CAAiB,CAAC,CAACc,KAAD,EAAQC,UAAR,CAAD,kBACf,QAAC,IAAD;AACE,MAAA,IAAI,EAAED,KADR;AAAA,6BAGC;AACG,QAAA,SAAS,EACP9B,UAAU,CAACD,MAAM,CAACkB,IAAR,EAAeI,KAAK,KAAKS,KAAX,IAAqB/B,MAAM,CAACmB,OAA1C,CAFf;AAAA,kBAIII,CAAC,CAAE,UAASQ,KAAM,EAAjB;AAJL;AAAA;AAAA;AAAA;AAAA;AAHD,OAEOA,KAFP;AAAA;AAAA;AAAA;AAAA,YADF,CAFG,eAeL,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAfK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAiBD,CAtBD;;AAuBA,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport {ROUTES} from '../../const/routes';\nimport {useRouter} from 'next/dist/client/router';\nconst secondaryMenu = () => {\n  return <div></div>;\n};\n\nconst LocaleToggler = () => {\n  const {push, locales, pathname, locale: currentLocale, ...rest} = useRouter();\n  const switchLocale = ({target}) => {\n    const {value: locale} = target.attributes.locale;\n    return push(pathname, pathname, {locale});\n  };\n  return <div className={styles.locales}>\n    {locales.map( (locale) =>\n      <a\n        className={\n          classNames(styles.link,\n              (currentLocale === locale) && styles.current)\n        }\n        locale={locale}\n        key={locale}\n        onClick={switchLocale}\n      >\n        {locale.toUpperCase()}\n      </a>)\n    }\n  </div>;\n};\n\nconst Navbar = () => {\n  const {route} = useRouter();\n  const {t} = useTranslation('common');\n  const navBarRoutes = Object.entries(ROUTES)\n      .filter(([_, {navBar}]) => navBar);\n  return <div className={styles.root}>\n    {\n      navBarRoutes.map(([alias, properties]) =>\n        <Link\n          href={alias}\n          key={alias}\n        ><a\n            className={\n              classNames(styles.link, (route === alias) && styles.current)\n            }>\n            {t(`header.${alias}`)}\n          </a>\n        </Link>,\n      )\n    }\n    <LocaleToggler/>\n  </div>;\n};\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}