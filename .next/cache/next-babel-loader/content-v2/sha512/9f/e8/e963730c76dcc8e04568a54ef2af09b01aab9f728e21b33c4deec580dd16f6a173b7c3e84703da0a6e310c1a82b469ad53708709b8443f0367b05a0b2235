{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nikita/comm-su/src/components/Navbar/Navbar.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport { ROUTES } from '../../const/routes';\nimport { useRouter } from 'next/dist/client/router';\n\nconst SecondaryMenu = ({\n  secondaryRoutes\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.secondaryMenu,\n    children: Object.entries(secondaryRoutes).map(([alias, properties]) => /*#__PURE__*/_jsxDEV(Link, {\n      href: alias,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: classNames(styles.link, route === alias && styles.current),\n        children: t(`header.${alias}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 10\n      }, this)\n    }, alias, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, this);\n};\n\nconst LocaleToggler = () => {\n  const {\n    push,\n    locales,\n    pathname,\n    locale: currentLocale\n  } = useRouter();\n\n  const switchLocale = ({\n    target\n  }) => {\n    const {\n      value: locale\n    } = target.attributes.locale;\n    return push(pathname, pathname, {\n      locale\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.locales,\n    children: locales.map(locale => /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classNames(styles.link, currentLocale === locale && styles.current),\n      locale: locale,\n      onClick: switchLocale,\n      children: locale.toUpperCase()\n    }, locale, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n\nconst Navbar = () => {\n  const {\n    route\n  } = useRouter();\n  const {\n    t\n  } = useTranslation('common');\n  const {\n    mainRoutes,\n    secondaryRoutes\n  } = Object.entries(ROUTES).reduce((acc, [alias, route]) => {\n    const {\n      mainRoutes,\n      secondaryRoutes\n    } = acc;\n\n    if (route.navBar) {\n      return {\n        mainRoutes: _objectSpread(_objectSpread({}, mainRoutes), {}, {\n          [alias]: route\n        }),\n        secondaryRoutes\n      };\n    }\n\n    ;\n    return {\n      mainRoutes,\n      secondaryRoutes: _objectSpread(_objectSpread({}, secondaryRoutes), {}, {\n        [alias]: route\n      })\n    };\n  }, {\n    mainRoutes: {},\n    secondaryRoutes: {}\n  });\n  const navBarRoutes = Object.entries(ROUTES).filter(([_, {\n    navBar\n  }]) => navBar);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [Object.entries(mainRoutes).map(([alias, properties]) => /*#__PURE__*/_jsxDEV(Link, {\n      href: alias,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: classNames(styles.link, route === alias && styles.current),\n        children: t(`header.${alias}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }, this)\n    }, alias, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)), secondaryRoutes.size && /*#__PURE__*/_jsxDEV(\"secondaryMenu\", _objectSpread({}, {\n      secondaryRoutes\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(LocaleToggler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/home/nikita/comm-su/src/components/Navbar/Navbar.jsx"],"names":["React","useTranslation","styles","classNames","Link","ROUTES","useRouter","SecondaryMenu","secondaryRoutes","secondaryMenu","Object","entries","map","alias","properties","link","route","current","t","LocaleToggler","push","locales","pathname","locale","currentLocale","switchLocale","target","value","attributes","toUpperCase","Navbar","mainRoutes","reduce","acc","navBar","navBarRoutes","filter","_","root","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport {ROUTES} from '../../const/routes';\nimport {useRouter} from 'next/dist/client/router';\nconst SecondaryMenu = ({secondaryRoutes}) => {\n  return <div className={styles.secondaryMenu}>\n    {\n      Object.entries(secondaryRoutes).map(([alias, properties]) =>\n        <Link\n          href={alias}\n          key={alias}\n        ><a\n            className={\n              classNames(styles.link, (route === alias) && styles.current)\n            }>\n            {t(`header.${alias}`)}\n          </a>\n        </Link>,\n      )\n    }\n  </div>;\n};\n\nconst LocaleToggler = () => {\n  const {\n    push,\n    locales,\n    pathname,\n    locale: currentLocale,\n  } = useRouter();\n  const switchLocale = ({target}) => {\n    const {value: locale} = target.attributes.locale;\n    return push(pathname, pathname, {locale});\n  };\n  return <div className={styles.locales}>\n    {locales.map( (locale) =>\n      <a\n        className={\n          classNames(styles.link,\n              (currentLocale === locale) && styles.current)\n        }\n        locale={locale}\n        key={locale}\n        onClick={switchLocale}\n      >\n        {locale.toUpperCase()}\n      </a>)\n    }\n  </div>;\n};\n\nconst Navbar = () => {\n  const {route} = useRouter();\n  const {t} = useTranslation('common');\n  const {mainRoutes, secondaryRoutes} = Object.entries(ROUTES)\n      .reduce( (acc, [alias, route]) => {\n        const {mainRoutes, secondaryRoutes} = acc;\n        if (route.navBar) {\n          return {\n            mainRoutes: {...mainRoutes, [alias]: route},\n            secondaryRoutes,\n          };\n        };\n        return {mainRoutes,\n          secondaryRoutes:\n        {\n          ...secondaryRoutes,\n          [alias]: route,\n        }};\n      }, {\n        mainRoutes: {},\n        secondaryRoutes: {},\n      });\n\n  const navBarRoutes = Object.entries(ROUTES)\n      .filter(([_, {navBar}]) => navBar);\n  return <div className={styles.root}>\n    {\n      Object.entries(mainRoutes).map(([alias, properties]) =>\n        <Link\n          href={alias}\n          key={alias}\n        ><a\n            className={\n              classNames(styles.link, (route === alias) && styles.current)\n            }>\n            {t(`header.${alias}`)}\n          </a>\n        </Link>,\n      )\n    }\n    {\n      secondaryRoutes.size && <secondaryMenu { ...{secondaryRoutes}}/>\n    }\n    <LocaleToggler/>\n  </div>;\n};\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}