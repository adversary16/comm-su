{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nikita/comm-su/src/components/Navbar/Navbar.jsx\";\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport { ROUTES } from '../../const/routes';\nimport { useRouter } from 'next/dist/client/router';\n\nconst secondaryMenu = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\nconst LocaleToggler = () => {\n  const _useRouter = useRouter(),\n        {\n    push,\n    locales,\n    pathname\n  } = _useRouter,\n        rest = _objectWithoutProperties(_useRouter, [\"push\", \"locales\", \"pathname\"]);\n\n  console.log(rest);\n\n  const switchLocale = ({\n    target\n  }) => {\n    const {\n      locale\n    } = target;\n    return push(pathname, pathname, {\n      locale\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.locales,\n    children: locales.map(locale => /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classNames(styles.link),\n      locale: locale,\n      onClick: switchLocale,\n      children: locale.toUpperCase()\n    }, locale, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n\nconst Navbar = () => {\n  const {\n    asPath\n  } = useRouter();\n  const {\n    t\n  } = useTranslation('common');\n  const navBarRoutes = Object.entries(ROUTES).filter(([_, {\n    navBar\n  }]) => navBar);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [navBarRoutes.map(([alias, properties]) => /*#__PURE__*/_jsxDEV(\"a\", {\n      href: alias,\n      className: classNames(styles.link, asPath === alias && styles.current),\n      children: t(`header.${alias}`)\n    }, alias, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(LocaleToggler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/home/nikita/comm-su/src/components/Navbar/Navbar.jsx"],"names":["React","useTranslation","styles","classNames","ROUTES","useRouter","secondaryMenu","LocaleToggler","push","locales","pathname","rest","console","log","switchLocale","target","locale","map","link","toUpperCase","Navbar","asPath","t","navBarRoutes","Object","entries","filter","_","navBar","root","alias","properties","current"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;AACA,MAAMC,aAAa,GAAG,MAAM;AAC1B,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAIA,MAAMC,aAAa,GAAG,MAAM;AAC1B,qBAA2CF,SAAS,EAApD;AAAA,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAAN;AAAA,QAAmCC,IAAnC;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAMG,YAAY,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAc;AACjC,UAAM;AAACC,MAAAA;AAAD,QAAWD,MAAjB;AACA,WAAOP,IAAI,CAACE,QAAD,EAAWA,QAAX,EAAqB;AAACM,MAAAA;AAAD,KAArB,CAAX;AACD,GAHD;;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAEd,MAAM,CAACO,OAAvB;AAAA,cACJA,OAAO,CAACQ,GAAR,CAAcD,MAAD,iBACZ;AACE,MAAA,SAAS,EAAEb,UAAU,CAACD,MAAM,CAACgB,IAAR,CADvB;AAEE,MAAA,MAAM,EAAEF,MAFV;AAIE,MAAA,OAAO,EAAEF,YAJX;AAAA,gBAMGE,MAAM,CAACG,WAAP;AANH,OAGOH,MAHP;AAAA;AAAA;AAAA;AAAA,YADD;AADI;AAAA;AAAA;AAAA;AAAA,UAAP;AAYD,CAnBD;;AAqBA,MAAMI,MAAM,GAAG,MAAM;AACnB,QAAM;AAACC,IAAAA;AAAD,MAAWhB,SAAS,EAA1B;AACA,QAAM;AAACiB,IAAAA;AAAD,MAAMrB,cAAc,CAAC,QAAD,CAA1B;AACA,QAAMsB,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAerB,MAAf,EAChBsB,MADgB,CACT,CAAC,CAACC,CAAD,EAAI;AAACC,IAAAA;AAAD,GAAJ,CAAD,KAAmBA,MADV,CAArB;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAE1B,MAAM,CAAC2B,IAAvB;AAAA,eAEHN,YAAY,CAACN,GAAb,CAAiB,CAAC,CAACa,KAAD,EAAQC,UAAR,CAAD,kBACf;AACE,MAAA,IAAI,EAAED,KADR;AAGE,MAAA,SAAS,EACP3B,UAAU,CAACD,MAAM,CAACgB,IAAR,EAAeG,MAAM,KAAKS,KAAZ,IAAsB5B,MAAM,CAAC8B,OAA3C,CAJd;AAAA,gBAOGV,CAAC,CAAE,UAASQ,KAAM,EAAjB;AAPJ,OAEOA,KAFP;AAAA;AAAA;AAAA;AAAA,YADF,CAFG,eAcL,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAdK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAgBD,CArBD;;AAsBA,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport {ROUTES} from '../../const/routes';\nimport {useRouter} from 'next/dist/client/router';\nconst secondaryMenu = () => {\n  return <div></div>;\n};\n\nconst LocaleToggler = () => {\n  const {push, locales, pathname, ...rest} = useRouter();\n  console.log(rest);\n  const switchLocale = ({target}) => {\n    const {locale} = target;\n    return push(pathname, pathname, {locale});\n  };\n  return <div className={styles.locales}>\n    {locales.map( (locale) =>\n      <a\n        className={classNames(styles.link)}\n        locale={locale}\n        key={locale}\n        onClick={switchLocale}\n      >\n        {locale.toUpperCase()}\n      </a>)\n    }\n  </div>;\n};\n\nconst Navbar = () => {\n  const {asPath} = useRouter();\n  const {t} = useTranslation('common');\n  const navBarRoutes = Object.entries(ROUTES)\n      .filter(([_, {navBar}]) => navBar);\n  return <div className={styles.root}>\n    {\n      navBarRoutes.map(([alias, properties]) =>\n        <a\n          href={alias}\n          key={alias}\n          className={\n            classNames(styles.link, (asPath === alias) && styles.current)\n          }\n        >\n          {t(`header.${alias}`)}\n        </a>,\n      )\n    }\n    <LocaleToggler/>\n  </div>;\n};\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}