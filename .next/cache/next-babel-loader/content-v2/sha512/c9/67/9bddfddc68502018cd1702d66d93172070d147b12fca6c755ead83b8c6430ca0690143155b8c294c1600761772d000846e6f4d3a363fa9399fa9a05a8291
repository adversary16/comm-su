{"ast":null,"code":"import _slicedToArray from \"/home/nikita/comm-su/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/nikita/comm-su/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nikita/comm-su/src/components/Navbar/Navbar.jsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport { ROUTES } from '../../const/routes';\nimport { useRouter } from 'next/dist/client/router';\n\nvar secondaryMenu = function secondaryMenu() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, _this);\n};\n\nvar LocaleToggler = function LocaleToggler() {\n  _s();\n\n  var _useRouter = useRouter(),\n      push = _useRouter.push,\n      locales = _useRouter.locales,\n      pathname = _useRouter.pathname,\n      currentLocale = _useRouter.locale,\n      rest = _objectWithoutProperties(_useRouter, [\"push\", \"locales\", \"pathname\", \"locale\"]);\n\n  console.log(rest);\n\n  var switchLocale = function switchLocale(_ref) {\n    var target = _ref.target;\n    var locale = target.attributes.locale.value;\n    return push(pathname, pathname, {\n      locale: locale\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.locales,\n    children: locales.map(function (locale) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        className: classNames(styles.link),\n        locale: locale,\n        onClick: switchLocale,\n        children: locale.toUpperCase()\n      }, locale, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(LocaleToggler, \"dkiodgOglqhTU+ifXiJD5egEPQk=\", false, function () {\n  return [useRouter];\n});\n\n_c = LocaleToggler;\n\nvar Navbar = function Navbar() {\n  _s2();\n\n  var _useRouter2 = useRouter(),\n      asPath = _useRouter2.asPath;\n\n  var _useTranslation = useTranslation('common'),\n      t = _useTranslation.t;\n\n  var navBarRoutes = Object.entries(ROUTES).filter(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        _ = _ref3[0],\n        navBar = _ref3[1].navBar;\n\n    return navBar;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [navBarRoutes.map(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          alias = _ref5[0],\n          properties = _ref5[1];\n\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: alias,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: classNames(styles.link, asPath === alias && styles.current),\n          children: t(\"header.\".concat(alias))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 10\n        }, _this)\n      }, alias, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(LocaleToggler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, _this);\n};\n\n_s2(Navbar, \"n7/s+NySFnBCL71yVyGiKdvA/ts=\", false, function () {\n  return [useRouter, useTranslation];\n});\n\n_c2 = Navbar;\nexport default Navbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocaleToggler\");\n$RefreshReg$(_c2, \"Navbar\");","map":{"version":3,"sources":["/home/nikita/comm-su/src/components/Navbar/Navbar.jsx"],"names":["React","useTranslation","styles","classNames","Link","ROUTES","useRouter","secondaryMenu","LocaleToggler","push","locales","pathname","currentLocale","locale","rest","console","log","switchLocale","target","attributes","value","map","link","toUpperCase","Navbar","asPath","t","navBarRoutes","Object","entries","filter","_","navBar","root","alias","properties","current"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,oBAArB;AACA,SAAQC,SAAR,QAAwB,yBAAxB;;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,sBAAO;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAFD;;AAIA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA;;AAAA,mBACwCF,SAAS,EADjD;AAAA,MACnBG,IADmB,cACnBA,IADmB;AAAA,MACbC,OADa,cACbA,OADa;AAAA,MACJC,QADI,cACJA,QADI;AAAA,MACcC,aADd,cACMC,MADN;AAAA,MACgCC,IADhC;;AAE1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,MAAMG,YAAY,GAAG,SAAfA,YAAe,OAAc;AAAA,QAAZC,MAAY,QAAZA,MAAY;AAAA,QACnBL,MADmB,GACTK,MAAM,CAACC,UAAP,CAAkBN,MADT,CAC1BO,KAD0B;AAEjC,WAAOX,IAAI,CAACE,QAAD,EAAWA,QAAX,EAAqB;AAACE,MAAAA,MAAM,EAANA;AAAD,KAArB,CAAX;AACD,GAHD;;AAIA,sBAAO;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACQ,OAAvB;AAAA,cACJA,OAAO,CAACW,GAAR,CAAa,UAACR,MAAD;AAAA,0BACZ;AACE,QAAA,SAAS,EAAEV,UAAU,CAACD,MAAM,CAACoB,IAAR,CADvB;AAEE,QAAA,MAAM,EAAET,MAFV;AAIE,QAAA,OAAO,EAAEI,YAJX;AAAA,kBAMGJ,MAAM,CAACU,WAAP;AANH,SAGOV,MAHP;AAAA;AAAA;AAAA;AAAA,eADY;AAAA,KAAb;AADI;AAAA;AAAA;AAAA;AAAA,WAAP;AAYD,CAnBD;;GAAML,a;UAC8DF,S;;;KAD9DE,a;;AAqBN,IAAMgB,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA;;AAAA,oBACFlB,SAAS,EADP;AAAA,MACZmB,MADY,eACZA,MADY;;AAAA,wBAEPxB,cAAc,CAAC,QAAD,CAFP;AAAA,MAEZyB,CAFY,mBAEZA,CAFY;;AAGnB,MAAMC,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAexB,MAAf,EAChByB,MADgB,CACT;AAAA;AAAA,QAAEC,CAAF;AAAA,QAAMC,MAAN,YAAMA,MAAN;;AAAA,WAAmBA,MAAnB;AAAA,GADS,CAArB;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAE9B,MAAM,CAAC+B,IAAvB;AAAA,eAEHN,YAAY,CAACN,GAAb,CAAiB;AAAA;AAAA,UAAEa,KAAF;AAAA,UAASC,UAAT;;AAAA,0BACf,QAAC,IAAD;AACE,QAAA,IAAI,EAAED,KADR;AAAA,+BAGC;AACG,UAAA,SAAS,EACP/B,UAAU,CAACD,MAAM,CAACoB,IAAR,EAAeG,MAAM,KAAKS,KAAZ,IAAsBhC,MAAM,CAACkC,OAA3C,CAFf;AAAA,oBAIIV,CAAC,kBAAWQ,KAAX;AAJL;AAAA;AAAA;AAAA;AAAA;AAHD,SAEOA,KAFP;AAAA;AAAA;AAAA;AAAA,eADe;AAAA,KAAjB,CAFG,eAeL,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAfK;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AAiBD,CAtBD;;IAAMV,M;UACalB,S,EACLL,c;;;MAFRuB,M;AAuBN,eAAeA,MAAf","sourcesContent":["import React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport {ROUTES} from '../../const/routes';\nimport {useRouter} from 'next/dist/client/router';\nconst secondaryMenu = () => {\n  return <div></div>;\n};\n\nconst LocaleToggler = () => {\n  const {push, locales, pathname, locale: currentLocale, ...rest} = useRouter();\n  console.log(rest);\n  const switchLocale = ({target}) => {\n    const {value: locale} = target.attributes.locale;\n    return push(pathname, pathname, {locale});\n  };\n  return <div className={styles.locales}>\n    {locales.map( (locale) =>\n      <a\n        className={classNames(styles.link)}\n        locale={locale}\n        key={locale}\n        onClick={switchLocale}\n      >\n        {locale.toUpperCase()}\n      </a>)\n    }\n  </div>;\n};\n\nconst Navbar = () => {\n  const {asPath} = useRouter();\n  const {t} = useTranslation('common');\n  const navBarRoutes = Object.entries(ROUTES)\n      .filter(([_, {navBar}]) => navBar);\n  return <div className={styles.root}>\n    {\n      navBarRoutes.map(([alias, properties]) =>\n        <Link\n          href={alias}\n          key={alias}\n        ><a\n            className={\n              classNames(styles.link, (asPath === alias) && styles.current)\n            }>\n            {t(`header.${alias}`)}\n          </a>\n        </Link>,\n      )\n    }\n    <LocaleToggler/>\n  </div>;\n};\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}