{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/nikita/comm-su/src/components/Navbar/Navbar.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport { ROUTES } from '../../const/routes';\nimport { useRouter } from 'next/dist/client/router';\n\nconst PhoneIcon = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.phone\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\nconst ContactBlock = ({\n  t\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.contacts,\n    children: [/*#__PURE__*/_jsxDEV(PhoneIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: `phone://${t('phonenumber')}`,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: classNames(styles.link),\n        children: t('phoneNumber')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n\nconst SecondaryMenu = ({\n  secondaryRoutes,\n  t,\n  route\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.secondaryMenu,\n    children: Object.entries(secondaryRoutes).map(([alias, properties]) => /*#__PURE__*/_jsxDEV(Link, {\n      href: alias,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: classNames(styles.link, styles.secondary, properties.icon && styles[properties.icon], route === alias && styles.current),\n        children: t(`header.${alias}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }, this)\n    }, alias, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n\nconst LocaleToggler = () => {\n  const {\n    push,\n    locales,\n    pathname,\n    locale: currentLocale\n  } = useRouter();\n\n  const switchLocale = ({\n    target\n  }) => {\n    const {\n      value: locale\n    } = target.attributes.locale;\n    return push(pathname, pathname, {\n      locale\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.locales,\n    children: locales.map(locale => /*#__PURE__*/_jsxDEV(\"a\", {\n      className: classNames(styles.link, currentLocale === locale && styles.current),\n      locale: locale,\n      onClick: switchLocale,\n      children: locale.toUpperCase()\n    }, locale, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n\nconst Navbar = () => {\n  const {\n    route\n  } = useRouter();\n  const {\n    0: isMenuOpen,\n    1: setIsMenuOpen\n  } = useState(false);\n\n  const toggleMenu = () => {\n    return setIsMenuOpen(prevState => !prevState);\n  };\n\n  const {\n    t\n  } = useTranslation('common');\n  const {\n    mainRoutes,\n    secondaryRoutes\n  } = Object.entries(ROUTES).reduce((acc, [alias, route]) => {\n    const {\n      mainRoutes,\n      secondaryRoutes\n    } = acc;\n\n    if (route.navBar) {\n      return {\n        mainRoutes: _objectSpread(_objectSpread({}, mainRoutes), {}, {\n          [alias]: route\n        }),\n        secondaryRoutes\n      };\n    }\n\n    ;\n    return {\n      mainRoutes,\n      secondaryRoutes: _objectSpread(_objectSpread({}, secondaryRoutes), {}, {\n        [alias]: route\n      })\n    };\n  }, {\n    mainRoutes: {},\n    secondaryRoutes: {}\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [Object.entries(mainRoutes).map(([alias, properties]) => /*#__PURE__*/_jsxDEV(Link, {\n      href: alias,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: classNames(styles.link, route === alias && styles.current),\n        children: t(`header.${alias}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 10\n      }, this)\n    }, alias, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)), secondaryRoutes && /*#__PURE__*/_jsxDEV(SecondaryMenu, _objectSpread({}, {\n      secondaryRoutes,\n      t,\n      route\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(ContactBlock, _objectSpread({}, {\n      t\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(LocaleToggler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/home/nikita/comm-su/src/components/Navbar/Navbar.jsx"],"names":["React","useState","useTranslation","styles","classNames","Link","ROUTES","useRouter","PhoneIcon","phone","ContactBlock","t","contacts","link","SecondaryMenu","secondaryRoutes","route","secondaryMenu","Object","entries","map","alias","properties","secondary","icon","current","LocaleToggler","push","locales","pathname","locale","currentLocale","switchLocale","target","value","attributes","toUpperCase","Navbar","isMenuOpen","setIsMenuOpen","toggleMenu","prevState","mainRoutes","reduce","acc","navBar","root"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport {ROUTES} from '../../const/routes';\nimport {useRouter} from 'next/dist/client/router';\n\nconst PhoneIcon = () => {\n  return <div className={styles.phone}/>;\n};\n\nconst ContactBlock = ({t}) => {\n  return <div className={styles.contacts}>\n    <PhoneIcon/>\n    <Link href={`phone://${t('phonenumber')}`}>\n      <a className={classNames(styles.link)}>\n        {t('phoneNumber')}\n      </a>\n    </Link>\n  </div>;\n};\n\nconst SecondaryMenu = ({secondaryRoutes, t, route}) => {\n  return <div className={styles.secondaryMenu}>\n    {\n      Object.entries(secondaryRoutes).map(([alias, properties]) =>\n        <Link\n          href={alias}\n          key={alias}\n        ><a\n            className={\n              classNames(\n                  styles.link,\n                  styles.secondary,\n                  properties.icon && styles[properties.icon],\n                  (route === alias) && styles.current)\n            }>\n            {t(`header.${alias}`)}\n          </a>\n        </Link>,\n      )\n    }\n  </div>;\n};\n\nconst LocaleToggler = () => {\n  const {\n    push,\n    locales,\n    pathname,\n    locale: currentLocale,\n  } = useRouter();\n  const switchLocale = ({target}) => {\n    const {value: locale} = target.attributes.locale;\n    return push(pathname, pathname, {locale});\n  };\n  return <div className={styles.locales}>\n    {locales.map( (locale) =>\n      <a\n        className={\n          classNames(styles.link,\n              (currentLocale === locale) && styles.current)\n        }\n        locale={locale}\n        key={locale}\n        onClick={switchLocale}\n      >\n        {locale.toUpperCase()}\n      </a>)\n    }\n  </div>;\n};\n\nconst Navbar = () => {\n  const {route} = useRouter();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const toggleMenu = () => {\n    return setIsMenuOpen((prevState) => !prevState);\n  };\n  const {t} = useTranslation('common');\n  const {mainRoutes, secondaryRoutes} = Object.entries(ROUTES)\n      .reduce( (acc, [alias, route]) => {\n        const {mainRoutes, secondaryRoutes} = acc;\n        if (route.navBar) {\n          return {\n            mainRoutes: {...mainRoutes, [alias]: route},\n            secondaryRoutes,\n          };\n        };\n        return {mainRoutes,\n          secondaryRoutes:\n        {\n          ...secondaryRoutes,\n          [alias]: route,\n        }};\n      }, {\n        mainRoutes: {},\n        secondaryRoutes: {},\n      });\n\n  return <div className={styles.root}>\n    {\n      Object.entries(mainRoutes).map(([alias, properties]) =>\n        <Link\n          href={alias}\n          key={alias}\n        ><a\n            className={\n              classNames(styles.link, (route === alias) && styles.current)\n            }>\n            {t(`header.${alias}`)}\n          </a>\n        </Link>,\n      )\n    }\n    {\n      secondaryRoutes && <SecondaryMenu { ...{secondaryRoutes, t, route}}/>\n    }\n    <ContactBlock {...{t}}/>\n    <LocaleToggler/>\n  </div>;\n};\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}