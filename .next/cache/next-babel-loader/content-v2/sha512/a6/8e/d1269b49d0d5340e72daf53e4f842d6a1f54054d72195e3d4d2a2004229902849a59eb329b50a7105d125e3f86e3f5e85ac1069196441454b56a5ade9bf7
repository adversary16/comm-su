{"ast":null,"code":"import _slicedToArray from \"/home/nikita/comm-su/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/nikita/comm-su/src/components/Navbar/Navbar.jsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport { ROUTES } from '../../const/routes';\nimport { useRouter } from 'next/dist/client/router';\n\nvar secondaryMenu = function secondaryMenu() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 10\n  }, _this);\n};\n\nvar LocaleToggler = function LocaleToggler() {\n  _s();\n\n  var _useRouter = useRouter(),\n      push = _useRouter.push,\n      locales = _useRouter.locales,\n      pathname = _useRouter.pathname,\n      currentLocale = _useRouter.locale;\n\n  var switchLocale = function switchLocale(_ref) {\n    var target = _ref.target;\n    var locale = target.attributes.locale.value;\n    return push(pathname, pathname, {\n      locale: locale\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.locales,\n    children: locales.map(function (locale) {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        className: classNames(styles.link, currentLocale === locale && styles.current),\n        locale: locale,\n        onClick: switchLocale,\n        children: locale.toUpperCase()\n      }, locale, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(LocaleToggler, \"OSDlDdsV1A92resxJyVsrIHXfQw=\", false, function () {\n  return [useRouter];\n});\n\n_c = LocaleToggler;\n\nvar Navbar = function Navbar() {\n  _s2();\n\n  var _useRouter2 = useRouter(),\n      route = _useRouter2.route;\n\n  var _useTranslation = useTranslation('common'),\n      t = _useTranslation.t;\n\n  var _Object$entries$reduc = Object.entries(ROUTE).reduce(function (acc, route) {\n    if (route.navBar) return {};\n  }, {\n    mainRoutes: [],\n    secondaryRoutes: []\n  }),\n      mainRoutes = _Object$entries$reduc.mainRoutes,\n      secondaryRoutes = _Object$entries$reduc.secondaryRoutes;\n\n  var navBarRoutes = Object.entries(ROUTES).filter(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        _ = _ref3[0],\n        navBar = _ref3[1].navBar;\n\n    return navBar;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [navBarRoutes.map(function (_ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          alias = _ref5[0],\n          properties = _ref5[1];\n\n      return /*#__PURE__*/_jsxDEV(Link, {\n        href: alias,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: classNames(styles.link, route === alias && styles.current),\n          children: t(\"header.\".concat(alias))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 10\n        }, _this)\n      }, alias, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(LocaleToggler, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 10\n  }, _this);\n};\n\n_s2(Navbar, \"8qjYgowSSDbbwGnk+0DMLDL0WtI=\", false, function () {\n  return [useRouter, useTranslation];\n});\n\n_c2 = Navbar;\nexport default Navbar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LocaleToggler\");\n$RefreshReg$(_c2, \"Navbar\");","map":{"version":3,"sources":["/home/nikita/comm-su/src/components/Navbar/Navbar.jsx"],"names":["React","useTranslation","styles","classNames","Link","ROUTES","useRouter","secondaryMenu","LocaleToggler","push","locales","pathname","currentLocale","locale","switchLocale","target","attributes","value","map","link","current","toUpperCase","Navbar","route","t","Object","entries","ROUTE","reduce","acc","navBar","mainRoutes","secondaryRoutes","navBarRoutes","filter","_","root","alias","properties"],"mappings":"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","sourcesContent":["import React from 'react';\nimport useTranslation from 'next-translate/useTranslation';\nimport styles from './Navbar.module.scss';\nimport classNames from 'classnames';\nimport Link from 'next/link';\nimport {ROUTES} from '../../const/routes';\nimport {useRouter} from 'next/dist/client/router';\nconst secondaryMenu = () => {\n  return <div></div>;\n};\n\nconst LocaleToggler = () => {\n  const {\n    push,\n    locales,\n    pathname,\n    locale: currentLocale,\n  } = useRouter();\n  const switchLocale = ({target}) => {\n    const {value: locale} = target.attributes.locale;\n    return push(pathname, pathname, {locale});\n  };\n  return <div className={styles.locales}>\n    {locales.map( (locale) =>\n      <a\n        className={\n          classNames(styles.link,\n              (currentLocale === locale) && styles.current)\n        }\n        locale={locale}\n        key={locale}\n        onClick={switchLocale}\n      >\n        {locale.toUpperCase()}\n      </a>)\n    }\n  </div>;\n};\n\nconst Navbar = () => {\n  const {route} = useRouter();\n  const {t} = useTranslation('common');\n  const {mainRoutes, secondaryRoutes} = Object.entries(ROUTE)\n      .reduce( (acc, route) => {\n        if (route.navBar) return {};\n      }, {mainRoutes: [], secondaryRoutes: []});\n  const navBarRoutes = Object.entries(ROUTES)\n      .filter(([_, {navBar}]) => navBar);\n  return <div className={styles.root}>\n    {\n      navBarRoutes.map(([alias, properties]) =>\n        <Link\n          href={alias}\n          key={alias}\n        ><a\n            className={\n              classNames(styles.link, (route === alias) && styles.current)\n            }>\n            {t(`header.${alias}`)}\n          </a>\n        </Link>,\n      )\n    }\n    <LocaleToggler/>\n  </div>;\n};\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}